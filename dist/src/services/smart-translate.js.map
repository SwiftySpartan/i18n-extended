{"version":3,"file":"smart-translate.js","sourceRoot":"","sources":["../../../src/services/smart-translate.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAI3C;IAOE;IAAgB,CAAC;IAEjB,SAAS;IACD,6CAAoB,GAA5B;QAAA,iBAiBC;QAhBC,IAAM,CAAC,GAAE,gBAAc,IAAI,CAAC,iBAAmB,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAA;QACrE,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,wDAAwD,CAAC,CAAA;QAC3E,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC;QAClD,WAAW,CAAC,IAAI,EAAE,UAAC,GAAQ,EAAE,MAAW;YACtC,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,GAAG,CAAC,CAAa,UAA0C,EAA1C,KAAA,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAA1C,cAA0C,EAA1C,IAA0C;gBAAtD,IAAI,IAAI,SAAA;gBACX,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB,CAAC,CAAA;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;IACF,oCAAW,GAAlB,UAAmB,IAAY;QAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC;YACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;IACH,CAAC;IAEM,gCAAO,GAAd,UAAe,IAAY;QACzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACvB,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAC7C,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,IAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;;gBAnDF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;yBAND;CAwDC,AApDD,IAoDC;SAjDY,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\n\ndeclare const require: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmartTranslate {\n  private translateFilePath: string;\n  private translations: Array<{source: string, target: string}>;\n\n  constructor() { }\n\n  //Private\n  private _loadTranslationFile() {\n    const t =`raw-loader!${this.translateFilePath}`;\n    console.log(t);\n    console.log('raw-loader!../../../../wallet/src/locale/fr/wallet.xlf')\n    console.log(t === 'raw-loader!../../../../wallet/src/locale/fr/wallet.xlf')\n    const file = require(t);\n    console.log(file);\n    const parseString = require('xml2js').parseString;\n    parseString(file, (err: any, result: any) => {\n      this.translations = [];\n      for (let item of result.xliff.file[0].body[0]['trans-unit']) {\n        this.translations.push({\n          source: item.source,\n          target: item.target\n        })\n      }\n    });\n  }\n\n  // Public\n  public setFilePath(path: string) {\n    this.translateFilePath = path;\n    try {\n      this._loadTranslationFile();\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  public getText(text: string) {\n    if (!this.translations) {\n      console.warn('Cannot find translation file');\n      return text;\n    }\n    const result = this.translations.filter((item) => {\n      if (item.source[0] === text) {\n        return item.target[0];\n      }\n    });\n\n    return result[0].target[0];\n  }\n}\n"]}